local data = require "main.data"
local obj = require "game.objects.obj"

local DRAG = 0.002
local ACCEL = 0.004
local MAX = 0.03

local function newlevel(self)
	obj.deleteall()
	msg.post("/level", "newlevel")
	self.angle = 0
	self.move = 0
	self.statewait = 10
	if data.level == 1 then	msg.post("view#game", "status", {text = "GET THE YELLOW BALL TO THE BLUE EXIT"})
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	newlevel(self)
end

local function drag(self)
	if self.move > 0 then self.move = self.move - DRAG
		if self.move < 0 then self.move = 0 end
	elseif self.move < 0 then self.move = self.move + DRAG
		if self.move > 0 then self.move = 0 end
	end
end

function update(self, dt)
	drag(self)
	self.angle = self.angle + self.move
	msg.post("/level", "angle", {angle = self.angle})

	if self.statewait > 0 then
		self.statewait = self.statewait - 1
		if self.statewait == 0 then data.state = data.STATE_PLAYING end
	end
end

local function status(self)
	if data.level == 2 then	msg.post("view#game", "status", {text = "AVOID THE EXPLOSIVE MINES"})
	elseif data.level == 3 then	msg.post("view#game", "status", {text = "COLLECT ALL GREEN GEMS BEFORE EXITING"})
	else msg.post("view#game", "status", {text = "LEVEL "..tostring(data.level).." / 16"})
	end
end

local function input_playing(self, action_id, action)
	if action_id == hash("right") then
		self.move = self.move - ACCEL
		if self.move < -MAX then self.move = -MAX end
	elseif action_id == hash("left") then
		self.move = self.move + ACCEL
		if self.move > MAX then self.move = MAX end
	elseif action_id == hash("restart") and action.pressed then
		sound.play("main:/sound#restart")
		msg.post("view#shutter", "reset")
		newlevel(self)
	elseif action_id == hash("exit") and action.pressed then
		if data.level > data.maxlevel then data.maxlevel = data.level end
		msg.post("main:/handler", "show_menu")
	--[[elseif action_id == hash("debug") and action.pressed then
		data.level = data.level + 1
		status(self)
		newlevel(self)--]]
	end
end

local function input_levelclear(self, action_id, action)
	if action_id == hash("action") and action.pressed then
		msg.post("view#clear", "hide")
		data.level = data.level + 1
		status(self)
		newlevel(self)
	end
end

local function input_gameover(self, action_id, action)
	if action_id == hash("action") and action.pressed then
		msg.post("view#gameover", "hide")
		newlevel(self)
	end
end

local function input_complete(self, action_id, action)
	if action_id == hash("action") and action.pressed then
		data.maxlevel = 1
		msg.post("main:/handler", "show_menu")
	end
end

function on_input(self, action_id, action)
	if data.state == data.STATE_PLAYING then
		input_playing(self, action_id, action)
	elseif data.state == data.STATE_LEVELCLEAR then
		input_levelclear(self, action_id, action)
	elseif data.state == data.STATE_GAMEOVER then
		input_gameover(self, action_id, action)
	elseif data.state == data.STATE_COMPLETE then
		input_complete(self, action_id, action)
	end
end
