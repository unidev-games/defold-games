local data = require "main.data"

function init(self)
	msg.post("@render:", "clear_color", {color = vmath.vector4(28/255,8/255,32/255,0)})
	msg.post(".", "acquire_input_focus")
	sound.play("main:/sound#music")
	for n = 1, 8 do
		data.prices[n] = data.baseprices[n]
		local node = gui.get_node("shop"..tostring(n))
		gui.set_enabled(node, false)
	end
end

local function energy(self)
	if data.energy > 99999999 then data.energy = 99999999 end
	local str = string.format("%08d", data.energy)
	gui.set_text(gui.get_node("energy"), str)

	for n = 1, 8 do
		s = string.sub(str, n, n) / 9
		local node = gui.get_node(string.format("%db", n))
		gui.set_scale(node, vmath.vector3(1-s,1,1))
	end

	str = ""
	if data.power > 1 then str = "x"..tostring(data.power) end
	gui.set_text(gui.get_node("power"), str)
end

local function comma_value(n) -- http://richard.warburton.it
	local left,num,right = string.match(n,'^([^%d]*%d)(%d*)(.-)$')
	return left..(num:reverse():gsub('(%d%d%d)','%1,'):reverse())..right
end

local function cost(self)
	for n = 1, 8 do
		local node = gui.get_node(string.format("cost%d", n))
		local text = "COST : "..comma_value(data.prices[n])
		gui.set_text(node, text)
	end
end

local function shop(self)
	local v = 0
	for n = 1, 8 do
		local node = gui.get_node("grey"..tostring(n))
		local a = 0.7
		if data.energy >= data.prices[n] then
			a = 0
			v = n
		end
		gui.set_color(node, vmath.vector4(28/255,8/255,32/255, a))
	end

	if v < 8 then v = v + 1 end
	
	for n = 1, v do
		local node = gui.get_node("shop"..tostring(n))
		gui.set_enabled(node, true)
	end

	if data.items[8] == 0 and data.modules >= 20 or
		data.items[8] == 1 and data.modules >= 35 or
		data.items[8] == 2 and data.modules >= 50 then
		gui.set_color(gui.get_node("grey"..tostring(1)), vmath.vector4(28/255,8/255,32/255, 0.7))
		gui.set_color(gui.get_node("grey"..tostring(3)), vmath.vector4(28/255,8/255,32/255, 0.7))
		gui.set_color(gui.get_node("grey"..tostring(4)), vmath.vector4(28/255,8/255,32/255, 0.7))
		gui.set_color(gui.get_node("grey"..tostring(5)), vmath.vector4(28/255,8/255,32/255, 0.7))
		gui.set_color(gui.get_node("grey"..tostring(6)), vmath.vector4(28/255,8/255,32/255, 0.7))
		gui.set_color(gui.get_node("grey"..tostring(7)), vmath.vector4(28/255,8/255,32/255, 0.7))
	end

	if data.items[2] >= data.modules * 2 or data.items[2] >= 100 then
		gui.set_color(gui.get_node("grey"..tostring(2)), vmath.vector4(28/255,8/255,32/255, 0.7))
	end

	if data.modules < 20 or data.items[8] >= 2 then
		gui.set_color(gui.get_node("grey"..tostring(8)), vmath.vector4(28/255,8/255,32/255, 0.7))
	end
end

function update(self, dt)
	energy(self)
	cost(self)
	shop(self)
end

local function buy(self, item)
	if data.energy >= data.prices[item] then
		if item == 1 then msg.post("station", "add_module", {type = 1})
		elseif item == 2 then msg.post("station", "add_panel")
		elseif item == 3 then msg.post("station", "add_module", {type = 3})
		elseif item == 4 then msg.post("station", "add_module", {type = 4})
		elseif item == 5 then msg.post("station", "add_module", {type = 5})
		elseif item == 6 then msg.post("station", "add_module", {type = 6})
		elseif item == 7 then msg.post("station", "add_module", {type = 7})
		elseif item == 8 then msg.post("station", "add_hub")
		end
	end
end

local function processclick(self, action)
	local node = gui.get_node("button")

	if gui.pick_node(node, action.x, action.y) then
		if action.pressed then
			gui.play_flipbook(node, "down")
			data.energy = data.energy + data.power
			data.total = data.total + data.power
			msg.post("#dialogue", "hide")
			sound.play("main:/sound#click", {gain = 0.25})
		elseif action.released then
			gui.play_flipbook(node, "up")
		end
	elseif gui.pick_node(gui.get_node("info"), action.x, action.y) and action.pressed then
		msg.post("#info", "show")
		sound.play("main:/sound#tick1")
	elseif gui.pick_node(gui.get_node("exit"), action.x, action.y) and action.pressed then
		msg.post("#exit", "show")
		sound.play("main:/sound#tick1")
	else
		for i = 1, 8 do
			local node = gui.get_node("shop"..tostring(i))
			if gui.pick_node(node, action.x, action.y) and action.pressed then
				buy(self, i)
			end
		end
	end
end

local function unlock(self)
	for n = 1, 8 do
		local node = gui.get_node("shop"..tostring(n))
		gui.set_enabled(node, true)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("click") then
		processclick(self, action)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("unlock") then unlock(self) end
end