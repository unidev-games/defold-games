local data = require ("main.data")

local function disable_node (self, node)
	gui.set_enabled(node, false)
end

function init(self)
	self.node = gui.get_node("container")
	gui.set_enabled(self.node, false)
	gui.set_color(self.node, vmath.vector4(1,1,1,0))
	gui.set_position(self.node, vmath.vector3(640, 260, 0))
end

local function show(self)
	gui.set_enabled(self.node, true)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(640,360,0), gui.EASING_INOUTQUAD, 0.5, 0, nil)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,1), gui.EASING_INOUTQUAD, 0.5, 0)

	local bonus = 0
	local p = math.abs(data.totalgems / 10)
	if data.gems == data.totalgems then bonus = 5
	elseif data.gems > data.totalgems-p then bonus = 4
	elseif data.gems > data.totalgems-(p*2) then bonus = 3
	elseif data.gems > data.totalgems-(p*3) then bonus = 2
	elseif data.gems > data.totalgems-(p*4) then bonus = 1
	end
	if bonus > 0 then
		data.lives = data.lives + bonus
		if bonus == 1 then gui.set_text(gui.get_node("bonus"), "* 1 EXTRA LIFE! *")
		else gui.set_text(gui.get_node("bonus"), string.format("* %d EXTRA LIVES! *", bonus))
		end
	end
end

local function hide(self)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(640,260,0), gui.EASING_INOUTQUAD, 0.5, 0, disable_node)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,0), gui.EASING_INOUTQUAD, 0.5, 0)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		show(self)
	elseif message_id == hash("hide") then
		hide(self)
	end
end