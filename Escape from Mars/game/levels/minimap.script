local function generate(self)
	sx, sy, width, height = tilemap.get_bounds("/level#tilemap")

	local buff = buffer.create(width * height, {{name = hash("rgba"), type = buffer.VALUE_TYPE_UINT8, count = 4}})
	local stream = buffer.get_stream(buff, hash("rgba"))

	for y = sy, sy + height - 1 do
		for x = sx, sx + width - 1 do
			local index = ((y - sy) * width * 4) + ((x - sx) * 4) 
			local t = tilemap.get_tile("/level#tilemap", "world", x, y)

			local byte = 0
			if t > 0 and t <= 128 then
				stream[index + 1] = 0x1e
				stream[index + 2] = 0x88
				stream[index + 3] = 0x75
				stream[index + 4] = 0xff
			elseif t > 128 then
				stream[index + 1] = 0x1d
				stream[index + 2] = 0x37
				stream[index + 3] = 0x32
				stream[index + 4] = 0xff
			else
				stream[index + 1] = 0x14
				stream[index + 2] = 0x12
				stream[index + 3] = 0x1e
				stream[index + 4] = 0xff
			end
		end
	end

	local resource_path = go.get("#sprite", "texture0")
	local header = {width = width, height = height, type = resource.TEXTURE_TYPE_2D, format = resource.TEXTURE_FORMAT_RGBA, num_mip_maps = 1}
	resource.set_texture(resource_path, header, buff)

	msg.post("view#game", "minimap_size", {size = vmath.vector3(width, height, 0), offset = vmath.vector3(sx, sy, 0)})
	msg.post("#sprite", "disable")
end

function init(self)
	generate(self)
end