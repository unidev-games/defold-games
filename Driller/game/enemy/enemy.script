local data = require ("main.data")

local SPEED = 0.25
local MARGIN = 6

function init(self)
	self.velx = 0
	self.burst = 0
	self.attack = false
	local pos = go.get_position()
	
	if pos.x < 0 then self.velx = SPEED
	else self.velx = -SPEED
	end

	msg.post("#sprite", "play_animation", {id = hash(tostring(math.random(1, 9)))})
	sprite.set_constant("#burst", "tint", vmath.vector4(1,1,1,0))
	sprite.set_hflip("#sprite", self.velx < 0)
end

local function move(self)
	local pos = go.get_position()
	pos.x = pos.x + self.velx
	if pos.x < -MARGIN or pos.x > 320 + MARGIN then
		go.delete()
	else
		go.set_position(pos)
	end
end

local function attack(self)
	self.burst = self.burst + 1
	self.attack = true
end

local function dead(self)
	particlefx.play("#pfx")
	msg.post("main:/sound#snap", "play_sound")
	go.delete()
end

local function burst(self)
	if self.burst % 16 < 8 then sprite.set_constant("#burst", "tint", vmath.vector4(1,1,1,0))
	else sprite.set_constant("#burst", "tint", vmath.vector4(1,1,1,1))
	end
	if self.burst % 16 == 8 then
		data.energy = data.energy - 5
		msg.post("main:/sound#damage", "play_sound")
	end
end

function update(self, dt)
	if data.state == data.STATE_PLAYING then
		if not self.attack then
			self.burst = 0
			move(self)
		else burst(self)
		end
	end
		
	self.attack = false
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		if message.other_group == hash("drill") then dead(self)
		elseif message.other_group == hash("shaft") then attack(self)
		elseif message.other_group == hash("world") then
			self.velx = -self.velx
			sprite.set_hflip("#sprite", self.velx < 0)
		end
	end
end


